package AirSimJavaClient;

import java.util.HashMap;
import java.util.Map;

import org.nd4j.shade.jackson.databind.*;


import org.msgpack.*;

public class AirSimClient {

}

class AirSimImageType {    
    static int Scene = 0;
    static int DepthPlanner = 1;
    static int DepthPerspective = 2;
    static int DepthVis = 3;
    static int DisparityNormalized = 4;
    static int Segmentation = 5;
    static int SurfaceNormals = 6;
}

class Drivetraintype {
    static int MaxDegreeOfFreedom = 0;
    static int ForwardOnly = 1;    
}

class LandedState {
    static int Landed = 0;
    static int Flying = 1;
}

class MsgpackMixin {
   	ObjectMapper mapper = new ObjectMapper();
   	
    public Map to_msgpack(Object obj) {
    	return mapper.convertValue(obj, Map.class);
    }

    public Object from_msgpack(Object type, Map encoded) {
    	return mapper.convertValue(encoded, type.getClass());
    }
}

class Vector3r extends MsgpackMixin {
    float x_val = 0;
    float y_val = 0;
    float z_val = 0;

    public Vector3r(float x_val, float y_val, float z_val) {
        this.x_val = x_val;
        this.y_val = y_val;
        this.z_val = z_val;
    }
    
    public Vector3r() {
        this.x_val = 0;
        this.y_val = 0;
        this.z_val = 0;
    }
}
    
class Quaternionr extends MsgpackMixin {
    float w_val = 0;
    float x_val = 0;
    float y_val = 0;
    float z_val = 0;

    public Quaternionr (float x_val, float y_val, float z_val, float w_val) {
        this.x_val = x_val;
        this.y_val = y_val;
        this.z_val = z_val;
        this.w_val = w_val;
    }
    
    public Quaternionr () {
        this.x_val = 0;
        this.y_val = 0;
        this.z_val = 0;
        this.w_val = 1;
    }
}

class Pose extends MsgpackMixin {
    Vector3r position = new Vector3r();
    Quaternionr orientation = new Quaternionr();

    public Pose(Vector3r position_val, Quaternionr orientation_val) {
        this.position = position_val;
        this.orientation = orientation_val;
    }
}

class CollisionInfo extends MsgpackMixin {
    boolean has_collided = false;
    Vector3r normal = new Vector3r();
    Vector3r impact_point = new Vector3r();
    Vector3r position = new Vector3r();
    float penetration_depth = 0;
    float time_stamp = 0;
}

class GeoPoint extends MsgpackMixin {
    float latitude = 0;
    float longitude = 0;
    float altitude = 0;
}

class YawMode extends MsgpackMixin {
    boolean is_rate = true;
    float yaw_or_rate = 0;
    
    public YawMode(boolean is_rate, float yaw_or_rate) {
        this.is_rate = is_rate;
        this.yaw_or_rate = yaw_or_rate;
    }
    
    public YawMode() {
    	this.is_rate = false;
    	this.yaw_or_rate = 0;
    }
    
    public YawMode(float yaw_or_rate) {
    	this.is_rate = false;
    	this.yaw_or_rate = yaw_or_rate;
    }
}

class ImageRequest extends MsgpackMixin {
    int camera_id = 0;
    int image_type = AirSimImageType.Scene;
    boolean pixels_as_float = false;
    boolean compress = false;

    public ImageRequest(int camera_id, int image_type, boolean pixels_as_float, boolean compress) {
        this.camera_id = camera_id;
        this.image_type = image_type;
        this.pixels_as_float = pixels_as_float;
        this.compress = compress;
    }
    
    public ImageRequest(int camera_id, int image_type) {
        this.camera_id = camera_id;
        this.image_type = image_type;
        this.pixels_as_float = false;
        this.compress = true;
    }
    
    public ImageRequest(int camera_id, int image_type, boolean pixels_as_float) {
        this.camera_id = camera_id;
        this.image_type = image_type;
        this.pixels_as_float = pixels_as_float;
        this.compress = true;
    }


}

class ImageResponse extends MsgpackMixin {
    int image_data_uint8 = 0;
    float image_data_float = 0;
    Vector3r camera_position = new Vector3r();
    Quaternionr camera_orientation = new Quaternionr();
    int time_stamp = 0;
    String message = "";
    float pixels_as_float = 0;
    boolean compress = true;
    int width = 0;
    int height = 0;
    int image_type = AirSimImageType.Scene;
}
